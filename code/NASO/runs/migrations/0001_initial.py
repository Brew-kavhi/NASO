# Generated by Django 4.2.5 on 2023-09-22 11:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("neural_architecture", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="EvaluationParameters",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("batch_size", models.IntegerField(default=32)),
                ("steps", models.IntegerField(null=True)),
                ("callbacks", models.JSONField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="FitParameters",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("batch_size", models.IntegerField(null=True)),
                ("epochs", models.IntegerField()),
                ("verbose", models.BinaryField(default=2, max_length=2)),
                ("callbacks", models.JSONField(null=True)),
                ("shuffle", models.BooleanField(default=True)),
                ("class_weight", models.JSONField(null=True)),
                ("sample_weight", models.JSONField(null=True)),
                ("initial_epoch", models.IntegerField(default=1)),
                ("steps_per_epoch", models.IntegerField(null=True)),
                ("max_queue_size", models.IntegerField(default=10)),
                ("workers", models.IntegerField(default=1)),
                ("use_multiprocessing", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="LossFunction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("additional_arguments", models.JSONField()),
                (
                    "instance_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="neural_architecture.losstype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Metric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("additional_arguments", models.JSONField()),
                ("name", models.CharField(max_length=100)),
                ("dtype", models.CharField(max_length=20)),
                (
                    "instance_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="neural_architecture.metrictype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NetworkHyperparameters",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("run_eagerly", models.BooleanField(default=False)),
                ("steps_per_execution", models.IntegerField(default=1)),
                ("jit_compile", models.BooleanField(default=False)),
                (
                    "loss",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="runs.lossfunction",
                    ),
                ),
                ("metrics", models.ManyToManyField(to="runs.metric")),
            ],
        ),
        migrations.CreateModel(
            name="NetworkTraining",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("naso_app_version", models.CharField(default="0.1.0", max_length=10)),
                ("git_hash", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "dataset",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="neural_architecture.dataset",
                    ),
                ),
                (
                    "evaluation_parameters",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="runs.evaluationparameters",
                    ),
                ),
                ("final_metrics", models.ManyToManyField(to="runs.metric")),
                (
                    "fit_parameters",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="runs.fitparameters",
                    ),
                ),
                (
                    "hyper_parameters",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="runs.networkhyperparameters",
                    ),
                ),
                (
                    "network_config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="neural_architecture.networkconfiguration",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TrainingMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("epoch", models.PositiveIntegerField()),
                ("metrics", models.JSONField()),
                (
                    "neural_network",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="runs.networktraining",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Optimizer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("additional_arguments", models.JSONField()),
                ("weight_decay", models.FloatField(default=0.0)),
                ("clipnorm", models.FloatField(blank=True, null=True)),
                ("clipvalue", models.FloatField(blank=True, null=True)),
                ("global_clipnorm", models.FloatField(blank=True, null=True)),
                ("use_ema", models.BooleanField(default=False)),
                ("ema_momentum", models.FloatField(default=0.99)),
                ("ema_overwrite_frequency", models.IntegerField(null=True)),
                ("jit_compile", models.BooleanField(default=True)),
                (
                    "instance_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="neural_architecture.optimizertype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="networkhyperparameters",
            name="optimizer",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="runs.optimizer",
            ),
        ),
    ]
