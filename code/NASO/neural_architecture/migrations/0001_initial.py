# Generated by Django 4.2.5 on 2023-09-22 11:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Dataset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField()),
                ("upload_date", models.DateTimeField(auto_now_add=True)),
                ("data_file", models.FileField(upload_to="datasets/")),
            ],
        ),
        migrations.CreateModel(
            name="Graph",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("graph_data", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="LayerConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("layer_id", models.IntegerField()),
                ("layer_type", models.CharField(max_length=150)),
            ],
            options={
                "unique_together": {("layer_type", "layer_id")},
            },
        ),
        migrations.CreateModel(
            name="SearchSpace",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "graph_representation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="neural_architecture.graph",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OptimizerType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("module_name", models.CharField(max_length=150)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("required_arguments", models.JSONField()),
                ("keras_native_optimizer", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
                "unique_together": {("module_name", "name")},
            },
        ),
        migrations.CreateModel(
            name="NetworkLayertype",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("module_name", models.CharField(max_length=150)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("required_arguments", models.JSONField()),
                ("keras_natiive_kayeer", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
                "unique_together": {("module_name", "name")},
            },
        ),
        migrations.CreateModel(
            name="NetworkConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                (
                    "layers",
                    models.ManyToManyField(to="neural_architecture.layerconfig"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MetricType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("module_name", models.CharField(max_length=150)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("required_arguments", models.JSONField()),
                ("keras_native_loss", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
                "unique_together": {("module_name", "name")},
            },
        ),
        migrations.CreateModel(
            name="LossType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("module_name", models.CharField(max_length=150)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("required_arguments", models.JSONField()),
                ("keras_native_loss", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
                "unique_together": {("module_name", "name")},
            },
        ),
        migrations.CreateModel(
            name="ActivationFunctionType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("module_name", models.CharField(max_length=150)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("required_arguments", models.JSONField()),
                ("keras_native_activation", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
                "unique_together": {("module_name", "name")},
            },
        ),
        migrations.CreateModel(
            name="ActivationFunction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("additional_arguments", models.JSONField()),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="neural_architecture.activationfunctiontype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
